import java.util.*;
public interface Shape3D
{
	double surfaceArea(double l, double w, double h);
	double volume(double l, double w, double h);
}


class Prism implements Shape3D
{
	public double surfaceArea(double l, double w, double h)
	{
		return (2*l*w)+(2*l*h)+(2*h*w);
	}
	double volume(double l, double w, double h)
	{
		return l*w*h;
	}
}
class RectangularPrism extends Prism
{

}
class Cube extends Prism
{
	public double surfaceArea(double l)
	{
		return 6*l;
	}
	public double volume(double l)
	{
		return l*l*l;
	}
}
class TriangularPrism extends Prism
{
	public double surfaceArea(double l, double w, double h)	
	{
		return (l*h) + (2*l*w) + (2*h*w);
	}
	public double volume(double l, double w, double h)
	{
		return 0.5 * l * h * w;
	}
}



class Pyramid implements Shape3D
{
	public double surfaceArea(double l, double w, double h)	
	{
		return (2*l*Math.sqrt((h*h)+(1/4.0 * w*w))) + (2*w*Math.sqrt((h*h)+(1/4.0 * l*l))) + (l*w);
	}
	public double volume(double l, double w, double h)
	{
		return 1/3.0 * l * w * h;
	}
}
class RectangularPyramid extends Pyramid
{

}
class SquarePyramid extends Pyramid
{
	public double surfaceArea(double l, double h)	
	{
		return (2*l*Math.sqrt((h*h)+(1/4.0 * l*l))) + (l*w);
	}
	public double volume(double l, double h)
	{
		return 1/3.0 * l * l * h;
	}
}
class TriangularPyramid extends Pyramid
{
	public double surfaceArea(double l, double w, double s, double x, double y, double z)	
	{
		return (0.5 * Math.sqrt(0.25*l*l + x*x)) + (0.5 * Math.sqrt(0.25*w*w + y*y)) + 
				(0.5 * Math.sqrt(0.25*s*s + z*z)) + (0.5 * Math.sqrt(0.25*l*l + s*s));	 
	}
	public double volume(double l, double w, double h)
	{
		return 1/3.0 * l * w * h;
	}
}



class Circular implements Shape3D
{
	public double surfaceArea(double r, double h)	
	{
		return (2 * Math.PI * r * r) + (Math.PI * 2 * r * h);
	}
	public double volume(double r, double h)
	{
		return Math.PI * r * r * h;
	}
}
class Cylinder extends Circular
{
	
}
class Sphere extends Circular
{
	public double surfaceArea(double r)	
	{
		return Math.PI * 4 * r * r;
	}
	public double volume(double r)
	{
		return Math.PI * r * r * r * 4/3.0;
	}
}
class Cone extends Circular
{
	public double surfaceArea(double r, double h)	
	{
		return  Math.PI * r * (r + Math.sqrt(h*h + r*r));
	}
	public double volume(double r, double h)
	{
		return Math.PI * r * r * h * 1/3.0;
	}
}
